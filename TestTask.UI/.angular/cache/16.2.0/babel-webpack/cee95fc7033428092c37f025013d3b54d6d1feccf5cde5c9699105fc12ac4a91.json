{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AddOrderComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.client.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.client.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.totalCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.status.name);\n  }\n}\nexport class AddOrderComponent {\n  constructor() {}\n  ngOnInit() {}\n}\n_class = AddOrderComponent;\n_class.ɵfac = function AddOrderComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-order\"]],\n  inputs: {\n    newOrder: \"newOrder\"\n  },\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"page\"], [1, \"menu\"], [1, \"border\"], [1, \"main\", \"border\"], [1, \"headerOrders\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AddOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Orders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵtext(5, \"Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵtext(7, \"Customers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"h2\");\n      i0.ɵɵtext(11, \"Orders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 2);\n      i0.ɵɵtext(13, \"New Order\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"table\")(16, \"thead\")(17, \"th\");\n      i0.ɵɵtext(18, \"Order Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Customer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Customer Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Total Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Status\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"tbody\");\n      i0.ɵɵtemplate(28, AddOrderComponent_tr_28_Template, 11, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","order_r1","id","client","name","address","totalCost","status","AddOrderComponent","constructor","ngOnInit","selectors","inputs","newOrder","decls","vars","consts","template","AddOrderComponent_Template","rf","ctx","ɵɵtemplate","AddOrderComponent_tr_28_Template","ɵɵproperty","orders"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.ts","D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n  @Input() newOrder?: Order;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n}\n","<div class=\"page\">\n    <div class=\"menu\">\n      <button class=\"border\">Orders</button>\n      <button class=\"border\">Products</button>\n      <button class=\"border\">Customers</button>\n    </div>\n    <div class=\"main border\">\n      <div class=\"headerOrders\">\n        <h2>Orders</h2>\n        <button class=\"border\">New Order</button>\n      </div>\n      <div>\n        <table>\n          <thead>\n            <th>Order Number</th>\n            <th>Customer Name</th>\n            <th>Customer Address</th>\n            <th>Total Cost</th>\n            <th>Status</th>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let order of orders\">\n              <td>{{ order.id }}</td>\n              <!-- <td>{{ order.Client.Name }}</td> -->\n              <!-- <td>{{ order.Client.Address }}</td> -->\n              <!-- <td>{{ order.customerName }}</td>\n              <td>{{ order.customerAddress }}</td>\n              <td>{{ order.totalCost }}</td>\n              <td>{{ order.statusName }}</td> -->\n              <td>{{ order.client.name }}</td>\n              <td>{{ order.client.address }}</td>\n              <td>{{ order.totalCost }}</td>\n              <td>{{ order.status.name }}</td>\n              <!-- <td>{{ order.Products[0] }}</td> -->\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}