{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/orders.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.client.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.client.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.totalCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.statusName);\n  }\n}\nexport class AppComponent {\n  constructor(orderService) {\n    this.orderService = orderService;\n    this.title = 'TestTask.UI';\n    this.orders = [];\n    this.ord = \"\";\n  }\n  ngOnInit() {\n    // this.orders = this.orderService.getOrders();\n    // console.log(this.orders);\n    this.orderService.getOrders().subscribe(result => {\n      this.orders = result;\n      this.ord = JSON.stringify(result);\n    });\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OrdersService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"<\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"table\")(4, \"thead\")(5, \"th\");\n      i0.ɵɵtext(6, \"Order Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Customer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Customer Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Total Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Status\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, AppComponent_tr_16_Template, 11, 5, \"tr\", 0);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","order_r1","id","client","name","address","totalCost","statusName","AppComponent","constructor","orderService","title","orders","ord","ngOnInit","getOrders","subscribe","result","JSON","stringify","ɵɵdirectiveInject","i1","OrdersService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_tr_16_Template","ɵɵproperty"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\app.component.ts","D:\\Test_Task\\TestTask.UI\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OrdersService } from './services/orders.service';\nimport { Order } from './models/order';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TestTask.UI';\n  orders: Order[] = [];\n  ord = \"\";\n\n  constructor(private orderService: OrdersService) {}\n\n  ngOnInit() : void{\n    // this.orders = this.orderService.getOrders();\n    // console.log(this.orders);\n    this.orderService\n      .getOrders()\n      .subscribe((result: Order[]) => { \n        this.orders = result;\n        this.ord = JSON.stringify(result);\n      });\n      \n    \n      \n  }\n}\n","<div><</div>\n<div>\n  <table>\n    <thead>\n      <th>Order Number</th>\n      <th>Customer Name</th>\n      <th>Customer Address</th>\n      <th>Total Cost</th>\n      <th>Status</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orders\">\n        <td>{{ order.id }}</td>\n        <!-- <td>{{ order.Client.Name }}</td> -->\n        <!-- <td>{{ order.Client.Address }}</td> -->\n        <!-- <td>{{ order.customerName }}</td>\n        <td>{{ order.customerAddress }}</td>\n        <td>{{ order.totalCost }}</td>\n        <td>{{ order.statusName }}</td> -->\n        <td>{{ order.client.name }}</td>\n        <td>{{ order.client.address }}</td>\n        <td>{{ order.totalCost }}</td>\n        <td>{{ order.statusName }}</td>\n        <!-- <td>{{ order.Products[0] }}</td> -->\n      </tr>\n    </tbody>\n  </table>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}