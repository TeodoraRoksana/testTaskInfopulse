{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/customers.service\";\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\nexport class AddOrderComponent {\n  constructor(customerService) {\n    this.customerService = customerService;\n    this.customers = [];\n  }\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n    });\n  }\n  saveOrder(newOrder) {}\n  cancel() {}\n}\n_class = AddOrderComponent;\n_class.ɵfac = function AddOrderComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CustomersService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-order\"]],\n  inputs: {\n    newOrder: \"newOrder\"\n  },\n  decls: 2,\n  vars: 1,\n  template: function AddOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.customers);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["AddOrderComponent","constructor","customerService","customers","ngOnInit","getCustomers","subscribe","result","saveOrder","newOrder","cancel","i0","ɵɵdirectiveInject","i1","CustomersService","selectors","inputs","decls","vars","template","AddOrderComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.ts","D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.html"],"sourcesContent":["import { NgFor } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Order } from 'src/app/models/order';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomersService } from 'src/app/services/customers.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css'],\n  //standalone: true,\n  //imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule]\n})\n\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\n\n export class AddOrderComponent implements OnInit {\n  customers: Customer[] = [];\n  @Input() newOrder?: Order;\n\n  constructor(private customerService: CustomersService) { }\n\n  ngOnInit(): void {\n    this.customerService\n      .getCustomers()\n      .subscribe((result: Customer[]) => { \n        this.customers = result;\n      });\n    \n  }\n\n  saveOrder(newOrder: Order){}\n\n  cancel(){}\n\n}\n","<!-- <div class=\"page\" *ngIf=\"newOrder\">\n    <div class=\"menu\">\n      <button class=\"border\">Orders</button>\n      <button class=\"border\">Products</button>\n      <button class=\"border\">Customers</button>\n    </div>\n\n    <div class=\"main border\">\n      <div class=\"headerOrders\">\n        <h2>New Order</h2>\n    </div>\n      <p>Order Number: 12</p>\n      <p>Order Date: random date</p>\n      <p>Customer:</p>\n      <input [(ngModel)]=\"newOrder.client.customerId\" placeholder=\"IdClient\" />\n      <p>Status:</p>\n      <input [(ngModel)]=\"newOrder.status.id\" placeholder=\"IdStatus\" />\n      <button (click)=\"saveOrder(newOrder)\">Save</button>\n      <button (click)=\"cancel()\">Cancel</button>\n              <mat-form-field>\n                  <mat-label>Favorite food</mat-label>\n                  <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\n                    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                      {{food.viewValue}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field> \n\n    </div>\n  </div> -->\n\n  <p>{{ customers }}</p>\n"],"mappings":";;;AAoBA;AACA;AACA;AACA;AACA;AACA;AAEC,OAAM,MAAOA,iBAAiB;EAI7BC,YAAoBC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;IAHnC,KAAAC,SAAS,GAAe,EAAE;EAG+B;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACF,eAAe,CACjBG,YAAY,EAAE,CACdC,SAAS,CAAEC,MAAkB,IAAI;MAChC,IAAI,CAACJ,SAAS,GAAGI,MAAM;IACzB,CAAC,CAAC;EAEN;EAEAC,SAASA,CAACC,QAAe,GAAE;EAE3BC,MAAMA,CAAA,GAAG;;SAjBGV,iBAAiB;;mBAAjBA,MAAiB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;;QAAjBd,MAAiB;EAAAe,SAAA;EAAAC,MAAA;IAAAP,QAAA;EAAA;EAAAQ,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCI7BV,EAAA,CAAAY,cAAA,QAAG;MAAAZ,EAAA,CAAAa,MAAA,GAAe;MAAAb,EAAA,CAAAc,YAAA,EAAI;;;MAAnBd,EAAA,CAAAe,SAAA,GAAe;MAAff,EAAA,CAAAgB,iBAAA,CAAAL,GAAA,CAAAnB,SAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}