{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nexport let AddOrderComponent = class AddOrderComponent {\n  // angForm?: FormGroup;\n  constructor(customerService, statusesServer, productsServer) {\n    this.customerService = customerService;\n    this.statusesServer = statusesServer;\n    this.productsServer = productsServer;\n    this.customers = [];\n    this.statuses = [];\n    this.products = [];\n    //@Input() newOrder?: Order;\n    this.newOrder = new Order();\n  }\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n    });\n    this.statusesServer.getStatues().subscribe(result => {\n      this.statuses = result;\n      console.log(result);\n    });\n  }\n  // createForm() {\n  //   this.angForm = this.fb.group({stat: ['', Validators.required]});\n  // }\n  addProductsToOrder() {}\n  saveOrder(newOrder) {\n    //let customer = this.customers.find(p => p.customerId == newOrder.client.customerId);\n    // if(customer != null){\n    //   newOrder.client.address = customer.address;\n    //   newOrder.client.name = customer.name;\n    //   newOrder.client.\n    // }\n    console.log(newOrder);\n  }\n  cancel() {}\n};\nAddOrderComponent = __decorate([Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n  //standalone: true,\n  //imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule]\n})\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\n], AddOrderComponent);","map":{"version":3,"names":["Component","Order","AddOrderComponent","constructor","customerService","statusesServer","productsServer","customers","statuses","products","newOrder","ngOnInit","getCustomers","subscribe","result","getStatues","console","log","addProductsToOrder","saveOrder","cancel","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.ts"],"sourcesContent":["import { NgFor } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, Validators } from '@angular/forms';\nimport { Order } from 'src/app/models/order';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomersService } from 'src/app/services/customers.service';\nimport { Router } from '@angular/router';\nimport { Status } from 'src/app/models/status';\nimport { StatusesService } from 'src/app/services/statuses.service';\nimport { Product } from 'src/app/models/product';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css'],\n  //standalone: true,\n  //imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule]\n})\n\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\n\n export class AddOrderComponent implements OnInit {\n  customers: Customer[] = [];\n  statuses: Status[] = [];\n  products: Product[] = [];\n  //@Input() newOrder?: Order;\n  newOrder = new Order;\n  // angForm?: FormGroup;\n\n\n  constructor(private customerService: CustomersService, \n              private statusesServer: StatusesService,\n              private productsServer: Pro) { }\n\n  ngOnInit(): void {\n    this.customerService\n      .getCustomers()\n      .subscribe((result: Customer[]) => { \n        this.customers = result;\n      });\n    \n    this.statusesServer\n      .getStatues()\n      .subscribe((result: Status[]) => {\n        this.statuses = result;\n        console.log(result);\n      });\n\n  }\n\n  // createForm() {\n  //   this.angForm = this.fb.group({stat: ['', Validators.required]});\n  // }\n  addProductsToOrder(){\n    \n  }\n\n  saveOrder(newOrder: Order){\n    //let customer = this.customers.find(p => p.customerId == newOrder.client.customerId);\n    // if(customer != null){\n    //   newOrder.client.address = customer.address;\n    //   newOrder.client.name = customer.name;\n    //   newOrder.client.\n    // }\n    \n\n    console.log(newOrder);\n  }\n\n  cancel(){}\n\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAuB,eAAe;AAExD,SAASC,KAAK,QAAQ,sBAAsB;AA2BpC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM7B;EAGAC,YAAoBC,eAAiC,EACjCC,cAA+B,EAC/BC,cAAmB;IAFnB,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,cAAc,GAAdA,cAAc;IAVlC,KAAAC,SAAS,GAAe,EAAE;IAC1B,KAAAC,QAAQ,GAAa,EAAE;IACvB,KAAAC,QAAQ,GAAc,EAAE;IACxB;IACA,KAAAC,QAAQ,GAAG,IAAIT,KAAK,CAAL,CAAK;EAMuB;EAE3CU,QAAQA,CAAA;IACN,IAAI,CAACP,eAAe,CACjBQ,YAAY,EAAE,CACdC,SAAS,CAAEC,MAAkB,IAAI;MAChC,IAAI,CAACP,SAAS,GAAGO,MAAM;IACzB,CAAC,CAAC;IAEJ,IAAI,CAACT,cAAc,CAChBU,UAAU,EAAE,CACZF,SAAS,CAAEC,MAAgB,IAAI;MAC9B,IAAI,CAACN,QAAQ,GAAGM,MAAM;MACtBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACrB,CAAC,CAAC;EAEN;EAEA;EACA;EACA;EACAI,kBAAkBA,CAAA,GAElB;EAEAC,SAASA,CAACT,QAAe;IACvB;IACA;IACA;IACA;IACA;IACA;IAGAM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EACvB;EAEAU,MAAMA,CAAA,GAAG;CAGV;AAnDalB,iBAAiB,GAAAmB,UAAA,EAf9BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;EACvC;EACA;CACD;AAED;AACA;AACA;AACA;AACA;AACA;AAAA,C,EAEctB,iBAAiB,CAmD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}