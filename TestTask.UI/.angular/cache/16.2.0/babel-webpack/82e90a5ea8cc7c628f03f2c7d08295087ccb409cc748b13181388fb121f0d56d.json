{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/customers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddOrderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"button\", 3);\n    i0.ɵɵtext(3, \"Orders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵtext(5, \"Products\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 3);\n    i0.ɵɵtext(7, \"Customers\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"h2\");\n    i0.ɵɵtext(11, \"New Order\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13, \"Order Number: 12\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵtext(15, \"Order Date: random date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\");\n    i0.ɵɵtext(17, \"Customer:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddOrderComponent_div_0_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.newOrder.client.customerId = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵtext(20, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function AddOrderComponent_div_0_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.newOrder.status.id = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AddOrderComponent_div_0_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.saveOrder(ctx_r4.newOrder));\n    });\n    i0.ɵɵtext(23, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AddOrderComponent_div_0_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cancel());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newOrder.client.customerId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newOrder.status.id);\n  }\n}\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\nexport class AddOrderComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.customers = [];\n  }\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      console.log(this.customers);\n    });\n  }\n  saveOrder(newOrder) {}\n  cancel() {}\n  newOrder() {\n    this.router.navigate(['/newOrder']);\n  }\n}\n_class = AddOrderComponent;\n_class.ɵfac = function AddOrderComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CustomersService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-order\"]],\n  inputs: {\n    newOrder: \"newOrder\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[\"class\", \"page\", 4, \"ngIf\"], [1, \"page\"], [1, \"menu\"], [1, \"border\"], [1, \"main\", \"border\"], [1, \"headerOrders\"], [\"placeholder\", \"IdClient\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"IdStatus\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function AddOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddOrderComponent_div_0_Template, 26, 2, \"div\", 0);\n      i0.ɵɵelementStart(1, \"p\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.newOrder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.customers[0].name);\n    }\n  },\n  dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddOrderComponent_div_0_Template_input_ngModelChange_18_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","newOrder","client","customerId","AddOrderComponent_div_0_Template_input_ngModelChange_21_listener","ctx_r3","status","id","AddOrderComponent_div_0_Template_button_click_22_listener","ctx_r4","saveOrder","AddOrderComponent_div_0_Template_button_click_24_listener","ctx_r5","cancel","ɵɵadvance","ɵɵproperty","ctx_r0","AddOrderComponent","constructor","customerService","router","customers","ngOnInit","getCustomers","subscribe","result","console","log","navigate","ɵɵdirectiveInject","i1","CustomersService","i2","Router","selectors","inputs","decls","vars","consts","template","AddOrderComponent_Template","rf","ctx","ɵɵtemplate","AddOrderComponent_div_0_Template","ɵɵtextInterpolate","name"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.ts","D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.html"],"sourcesContent":["import { NgFor } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Order } from 'src/app/models/order';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomersService } from 'src/app/services/customers.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css'],\n  //standalone: true,\n  //imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule]\n})\n\n// @Component({\n//   selector: 'select-form-example',\n//   templateUrl: 'select-form-example.html',\n//   standalone: true,\n//   imports: [FormsModule, MatFormFieldModule, MatSelectModule, NgFor, MatInputModule],\n// })\n\n export class AddOrderComponent implements OnInit {\n  customers: Customer[] = [];\n  @Input() newOrder?: Order;\n\n  constructor(private customerService: CustomersService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.customerService\n      .getCustomers()\n      .subscribe((result: Customer[]) => { \n        this.customers = result;\n        console.log(this.customers);\n      });\n  }\n\n  saveOrder(newOrder: Order){}\n\n  cancel(){}\n\n  newOrder(){\n    this.router.navigate(['/newOrder']);\n  }\n}\n","<div class=\"page\" *ngIf=\"newOrder\">\n    <div class=\"menu\">\n      <button class=\"border\">Orders</button>\n      <button class=\"border\">Products</button>\n      <button class=\"border\">Customers</button>\n    </div>\n\n    <div class=\"main border\">\n      <div class=\"headerOrders\">\n        <h2>New Order</h2>\n    </div>\n      <p>Order Number: 12</p>\n      <p>Order Date: random date</p>\n      <p>Customer:</p>\n      <input [(ngModel)]=\"newOrder.client.customerId\" placeholder=\"IdClient\" />\n      <p>Status:</p>\n      <input [(ngModel)]=\"newOrder.status.id\" placeholder=\"IdStatus\" />\n      <button (click)=\"saveOrder(newOrder)\">Save</button>\n      <button (click)=\"cancel()\">Cancel</button>\n              <!-- <mat-form-field>\n                  <mat-label>Favorite food</mat-label>\n                  <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\n                    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                      {{food.viewValue}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>  -->\n\n    </div>\n  </div>\n\n  <p>{{ customers[0].name }}</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}