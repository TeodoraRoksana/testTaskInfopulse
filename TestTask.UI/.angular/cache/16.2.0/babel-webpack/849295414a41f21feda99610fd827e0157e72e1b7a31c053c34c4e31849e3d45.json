{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nfunction AddOrderComponent_div_0_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const food_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", food_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", food_r2.viewValue, \" \");\n  }\n}\nfunction AddOrderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"button\", 3);\n    i0.ɵɵtext(3, \"Orders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵtext(5, \"Products\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 3);\n    i0.ɵɵtext(7, \"Customers\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"h2\");\n    i0.ɵɵtext(11, \"New Order\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Favorite food\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-select\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddOrderComponent_div_0_Template_mat_select_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectedValue = $event);\n    });\n    i0.ɵɵtemplate(16, AddOrderComponent_div_0_mat_option_16_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.foods);\n  }\n}\nexport class AddOrderComponent {\n  constructor() {}\n  ngOnInit() {}\n}\n_class = AddOrderComponent;\n_class.ɵfac = function AddOrderComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-order\"]],\n  inputs: {\n    newOrder: \"newOrder\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"page\", 4, \"ngIf\"], [1, \"page\"], [1, \"menu\"], [1, \"border\"], [1, \"main\", \"border\"], [1, \"headerOrders\"], [\"name\", \"food\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AddOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddOrderComponent_div_0_Template, 17, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.newOrder);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","food_r2","value","ɵɵadvance","ɵɵtextInterpolate1","viewValue","ɵɵlistener","AddOrderComponent_div_0_Template_mat_select_ngModelChange_15_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","selectedValue","ɵɵtemplate","AddOrderComponent_div_0_mat_option_16_Template","ctx_r0","foods","AddOrderComponent","constructor","ngOnInit","selectors","inputs","newOrder","decls","vars","consts","template","AddOrderComponent_Template","rf","ctx","AddOrderComponent_div_0_Template"],"sources":["D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.ts","D:\\Test_Task\\TestTask.UI\\src\\app\\components\\add-order\\add-order.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n  @Input() newOrder?: Order;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n}\n","<div class=\"page\" *ngIf=\"newOrder\">\n    <div class=\"menu\">\n      <button class=\"border\">Orders</button>\n      <button class=\"border\">Products</button>\n      <button class=\"border\">Customers</button>\n    </div>\n\n    <div class=\"main border\">\n      <div class=\"headerOrders\">\n        <h2>New Order</h2>\n    </div>\n    \n    <mat-form-field>\n        <mat-label>Favorite food</mat-label>\n        <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\n          <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n            {{food.viewValue}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n  </div>\n"],"mappings":";;;;ICeUA,EAAA,CAAAC,cAAA,oBAA4D;IAC1DD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF0BH,EAAA,CAAAI,UAAA,UAAAC,OAAA,CAAAC,KAAA,CAAoB;IACzDN,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAH,OAAA,CAAAI,SAAA,MACF;;;;;;IAjBVT,EAAA,CAAAC,cAAA,aAAmC;IAEND,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACtCH,EAAA,CAAAC,cAAA,gBAAuB;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACxCH,EAAA,CAAAC,cAAA,gBAAuB;IAAAD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAG3CH,EAAA,CAAAC,cAAA,aAAyB;IAEjBD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAGtBH,EAAA,CAAAC,cAAA,sBAAgB;IACDD,EAAA,CAAAE,MAAA,qBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAY;IACpCH,EAAA,CAAAC,cAAA,qBAAoD;IAAxCD,EAAA,CAAAU,UAAA,2BAAAC,sEAAAC,MAAA;MAAAZ,EAAA,CAAAa,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAf,EAAA,CAAAgB,aAAA;MAAA,OAAAhB,EAAA,CAAAiB,WAAA,CAAAF,MAAA,CAAAG,aAAA,GAAAN,MAAA;IAAA,EAA2B;IACrCZ,EAAA,CAAAmB,UAAA,KAAAC,8CAAA,wBAEa;IACfpB,EAAA,CAAAG,YAAA,EAAa;;;;IAJDH,EAAA,CAAAO,SAAA,IAA2B;IAA3BP,EAAA,CAAAI,UAAA,YAAAiB,MAAA,CAAAH,aAAA,CAA2B;IACRlB,EAAA,CAAAO,SAAA,GAAQ;IAARP,EAAA,CAAAI,UAAA,YAAAiB,MAAA,CAAAC,KAAA,CAAQ;;;ADP/C,OAAM,MAAOC,iBAAiB;EAG5BC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GAER;;SAPWF,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAG,SAAA;EAAAC,MAAA;IAAAC,QAAA;EAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BlC,EAAA,CAAAmB,UAAA,IAAAiB,gCAAA,kBAsBQ;;;MAtBWpC,EAAA,CAAAI,UAAA,SAAA+B,GAAA,CAAAP,QAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}